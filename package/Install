; EAB WHDLoad Demos AGA Menu Package Install Script
; -------------------------------------------------
;
; Author: Henrik Noerfjand Stengaard
; Date: 2017-04-19
;
; This script extracts and installs zip archives for EAB WHDLoad Demos AGA Menu Package.


; Copy readme and screenshots to locale help for EAB WHDLoad Demos AGA Menu
IF NOT EXISTS SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu
  makepath >NIL: SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu
ENDIF
copy >NIL: PACKAGEDIR:README SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu
copy >NIL: PACKAGEDIR:README.guide SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu
copy >NIL: PACKAGEDIR:README.info SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu
IF NOT EXISTS SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu/screenshots
  makepath >NIL: SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu/screenshots
ENDIF
copy >NIL: PACKAGEDIR:screenshots/#?.iff SYSTEMDIR:Locale/Help/EAB-WHDLoad-Demos-AGA-Menu/screenshots


echo "Installing Menu and WHDLoad drawers..."
unzip -qq -o -x PACKAGEDIR:menu-whdload-drawers.zip -d WHDLOADDIR:

echo "Installing AGS2 Demos Menu..."
IF NOT EXISTS "WHDLOADDIR:Menu/AGS2Demos"
  makedir "WHDLOADDIR:Menu/AGS2Demos" >NIL:
ENDIF
unzip -qq -o -x PACKAGEDIR:ags2demos-menu.zip -d WHDLOADDIR:Menu/AGS2Demos/
protect >NIL: WHDLOADDIR:Menu/AGS2Demos/AGS2 +rwe
protect >NIL: WHDLOADDIR:Menu/AGS2Demos/AGS2Helper +rwe
protect >NIL: WHDLOADDIR:Menu/AGS2Demos/AGS2Menu +rwe
IF NOT EXISTS "WHDLOADDIR:Menu/AGS2Demos/Music"
  makedir "WHDLOADDIR:Menu/AGS2Demos/Music" >NIL:
ENDIF
IF NOT EXISTS "WHDLOADDIR:Menu/AGS2Demos/.Favourites.ags"
  IF NOT EXISTS "WHDLOADDIR:Menu/AGS2Demos/.Favourites.ag_"
    makedir >NIL: "WHDLOADDIR:Menu/AGS2Demos/.Favourites.ag_"
  ENDIF
ENDIF

echo "Installing Menu WHDLoad Content..." 
unzip -qq -o -x PACKAGEDIR:menu-whdload-content.zip -d WHDLOADDIR:WHDLoad/Demos/

; Create systemdir demos directory, if it doesn't exist
IF NOT EXISTS SYSTEMDIR:Demos
  makedir >NIL: SYSTEMDIR:Demos
ENDIF

echo "Installing AGS2 menu support files..."
unzip -qq -o -x PACKAGEDIR:ags2menu-support-files.zip -d SYSTEMDIR:

; Add icon for configuration drawer, if it doesn't exist
IF NOT EXISTS SYSTEMDIR:Programs/Configuration.info
  rename >NIL: SYSTEMDIR:Programs/Configuration.info.new SYSTEMDIR:Programs/Configuration.info
ELSE
  delete >NIL: SYSTEMDIR:Programs/Configuration.info.new
ENDIF

; Create default folder icon for systemdir demos and programs
IF EXISTS SYSTEMDIR:Prefs/Env-Archive/Sys/def_drawer.info
  IF NOT EXISTS SYSTEMDIR:Demos.info
    copy SYSTEMDIR:Prefs/Env-Archive/Sys/def_drawer.info SYSTEMDIR:Demos.info
  ENDIF
  IF NOT EXISTS SYSTEMDIR:Programs.info
    copy SYSTEMDIR:Prefs/Env-Archive/Sys/def_drawer.info SYSTEMDIR:Programs.info
  ENDIF
ELSE
  IF EXISTS SYSTEMDIR:System.info
    IF NOT EXISTS SYSTEMDIR:Demos.info
      copy SYSTEMDIR:System.info SYSTEMDIR:Demos.info
    ENDIF
    IF NOT EXISTS SYSTEMDIR:Programs.info
      copy SYSTEMDIR:System.info SYSTEMDIR:Programs.info
    ENDIF
  ENDIF
ENDIF

; Fix read write execute flags for ags2 menu support files
protect >NIL: SYSTEMDIR:C/Aren +rwe
protect >NIL: SYSTEMDIR:C/basename +rwe
protect >NIL: SYSTEMDIR:C/cut +rwe
protect >NIL: SYSTEMDIR:C/dirname +rwe
protect >NIL: SYSTEMDIR:C/EasyMOD +rwe
protect >NIL: SYSTEMDIR:C/filepick +rwe
protect >NIL: SYSTEMDIR:C/FRSort +rwe
protect >NIL: SYSTEMDIR:C/FSearch +rwe
protect >NIL: SYSTEMDIR:C/GetLines +rwe
protect >NIL: SYSTEMDIR:C/Rep +rwe
protect >NIL: SYSTEMDIR:C/ReqList +rwe
protect >NIL: SYSTEMDIR:C/RequestString +rwe
protect >NIL: SYSTEMDIR:C/sed +rwe
protect >NIL: SYSTEMDIR:C/tail +rwe
protect >NIL: SYSTEMDIR:C/tr +rwe
protect >NIL: SYSTEMDIR:C/wc +rwe

; Create settings directory, if it doesn't exist
IF NOT EXISTS SYSTEMDIR:S/Settings
  makedir >NIL: SYSTEMDIR:S/Settings
ENDIF

; Create default whdloadargs for ags2 menus, if it doesn't exist
IF NOT EXISTS SYSTEMDIR:S/Settings/whdloadargs
  echo "Preload" > SYSTEMDIR:S/Settings/whdloadargs
ENDIF

; Create ags2music settings to turn on music in ags2 menu
IF NOT EXISTS SYSTEMDIR:S/Settings/ags2music
  echo "" NOLINE > SYSTEMDIR:S/Settings/ags2music
ENDIF

; Add ags2 startup to startup sequence, if it doesn't exist
search SYSTEMDIR:S/Startup-Sequence "execute S:AGS2Startup" >NIL:
IF WARN 
  rep SYSTEMDIR:S/Startup-Sequence "BindDrivers" "IF EXISTS S:AGS2Startup*N  execute S:AGS2Startup*NENDIF*N*NBindDrivers"
ENDIF


; Configure ClassicWB
; -------------------

; Skip, if assign startup doesn't exist
IF NOT EXISTS SYSTEMDIR:S/Assign-Startup
  SKIP hstwb
ENDIF

; Skip, if assign startup doesn't contain "ClassicWB"
search SYSTEMDIR:S/Assign-Startup "ClassicWB" >NIL:
IF WARN
  SKIP hstwb
ENDIF

echo "Configuring ClassicWB..."


; Add or update A-Demos to user-assign
set demospath "`execute PACKAGES:CombinePath "$WHDLOADDIR" "WHDLoad/Demos"`"
search SYSTEMDIR:S/Assign-Startup "A-Demos:" >NIL:
IF WARN  
	echo "Assign >NIL: A-Demos: $demospath" >>SYSTEMDIR:S/Assign-Startup
ELSE
  setenv updateassign `RequestChoice "Update assign" "A-Demos: assign already exists and must be updated to*Npath '$demospath'.*N*NNote: Updating assign requires a reboot after*Ninstallation is done!*N*NDo you want to update A-Demos: assign?" "Yes|No"`
  IF "$updateassign" EQ "1"
    echo "$demospath" >T:demospath
    set demospath "`sed "s/\//\\\//g" T:demospath`"
    sed "s/\([Aa]-[Dd][Ee][Mm][Oo][Ss]:\)/\1 $demospath;/" "SYSTEMDIR:S/Assign-Startup" >"T:Assign-Startup"
    copy >NIL: "T:Assign-Startup" "SYSTEMDIR:S/Assign-Startup"
  ENDIF   
ENDIF

SKIP configuremenus


; Configure HstWB
; ---------------
LAB hstwb

; Skip, if user assign doesn't exist
IF EXISTS SYSTEMDIR:S/User-Assign
  echo "Configuring HstWB..."
ELSE
  echo "Configuring Workbench..."
	echo "" NOLINE >SYSTEMDIR:S/User-Assign
ENDIF

; Add execute user assign to startup sequence, if it doesn't exist
search SYSTEMDIR:S/Startup-Sequence "execute S:User-Assign" >NIL:
IF WARN 
  rep SYSTEMDIR:S/Startup-Sequence "BindDrivers" "IF EXISTS S:User-Assign*N  execute S:User-Assign*NENDIF*N*NBindDrivers"
ENDIF

; Add or update A-Demos to user-assign
set demospath "`execute PACKAGES:CombinePath "$WHDLOADDIR" "WHDLoad/Demos"`"
search SYSTEMDIR:S/User-Assign "A-Demos:" >NIL:
IF WARN 
	echo "Assign >NIL: A-Demos: $demospath" >>SYSTEMDIR:S/User-Assign
ELSE
  setenv updateassign `RequestChoice "Update assign" "A-Demos: assign already exists and must be updated to*Npath '$demospath'.*N*NNote: Updating assign requires a reboot after*Ninstallation is done!*N*NDo you want to update A-Demos: assign?" "Yes|No"`
  IF "$updateassign" EQ "1"
    echo "$demospath" >T:demospath
    set demospath "`sed "s/\//\\\//g" T:demospath`"
    sed "s/\([Aa]-[Dd][Ee][Mm][Oo][Ss]:\)/\1 $demospath;/" "SYSTEMDIR:S/User-Assign" >"T:User-Assign"
    copy >NIL: "T:User-Assign" "SYSTEMDIR:S/User-Assign"
  ENDIF   
ENDIF


; Configure menus
; ------------------------
LAB configuremenus

; Add or update ags2 demos menu dir to ags2menu.data
set ags2demosmenupath "`execute PACKAGES:CombinePath "$WHDLOADDIR" "Menu/AGS2Demos"`"
search SYSTEMDIR:S/AGS2Menu.data "AGS2DemosMenuDir=" >NIL:
IF WARN 
	echo "AGS2DemosMenuDir=$ags2demosmenupath" >>SYSTEMDIR:S/AGS2Menu.data
ELSE
  rep SYSTEMDIR:S/AGS2Menu.data "AGS2DemosMenuDir=" "AGS2DemosMenuDir=$ags2demosmenupath*N; "
ENDIF

; Add or update igame demos menu dir to igamemenu.data
set igamedemosmenupath "`execute PACKAGES:CombinePath "$SYSTEMDIR" "Demos"`"
search SYSTEMDIR:S/iGameMenu.data "iGameDemosMenuDir=" >NIL:
IF WARN 
	echo "iGameDemosMenuDir=$igamedemosmenupath" >>SYSTEMDIR:S/iGameMenu.data
ELSE
  rep SYSTEMDIR:S/iGameMenu.data "iGameDemosMenuDir=" "iGameDemosMenuDir=$igamedemosmenupath*N; "
ENDIF

echo "Installing Demo Frontends..."
unzip -qq -o -x PACKAGEDIR:demo-frontends.zip -d SYSTEMDIR:Demos/


; End
LAB end